#!/usr/bin/env Rscript

args = list(coverage = 'data/quant/royal-jelly-counts.tsv',
            design = 'raw/samples.csv',
            viruses = 'supporting/bee-virus-list.csv',
            total_mapped = 'data/quant/all-mapped-royal-jelly-counts.tsv')

sys = modules::import('klmr/sys')

geom_sparsebox = function (mapping = NULL, data = NULL, position = 'identity', size = 0.5, width = 0.75, lwd = 0.8)
    list(stat_summary(aes(ymin = ..y.., ymax = ..y..), position = position,
                      fun.y = mean, geom = 'errorbar', width = width, lwd = lwd),
         geom_dotplot(mapping = mapping, data = data, position = position, binaxis = 'y',
                      stackdir = 'center', dotsize = size, binwidth = 0.03))

sys$run({
    io = modules::import('ebi-predocs/ebits/io')

    modules::import_package('dplyr', attach = TRUE)
    tidyr = modules::import_package('tidyr')

    design = io$read_table(args$design, header = TRUE) %>%
        filter(Lane == 1) %>%
        select(Sample_ID)

    viruses = io$read_table(args$viruses) %>%
        select(Species = 1, ID = 5)

    annotation = io$read_table('data/apis-viruses.annotation.tsv') %>%
        select(Gene = 1, Biotype = 2) %>%
        mutate(Gene = sub('^gi\\|[^|]+\\|(ref|gb)\\|([^|]+)\\|$', '\\2', Gene),
               Biotype = gsub('_', '\u00AD', Biotype))

    total_mapped = io$read_table(args$total_mapped) %>%
        select(Library = 1, Count = 2) %>%
        mutate(Gene = NA_character_) %>%
        select(Gene, Library, Count)

    raw_coverage = io$read_table(args$coverage, header = TRUE) %>%
        tidyr$gather(Library, Count, -Gene) %>%
        bind_rows(total_mapped) %>%
        mutate(Library = sub('_.*', '', Library) %>% gsub('-', '_', .)) %>%
        inner_join(design, by = c('Library' = 'Sample_ID')) %>%
        mutate(Gene = sub('^gi\\|[^|]+\\|(ref|gb)\\|([^|]+)\\|$', '\\2', Gene)) %>%
        left_join(viruses, by = c('Gene' = 'ID')) %>%
        mutate(Species = ifelse(is.na(Species), 'Apis mellifera', Species)) %>%
        mutate(Species = relevel(factor(Species), 'Apis mellifera')) %>%
        left_join(annotation, by = 'Gene') %>%
        mutate(Which = ifelse(grepl('^MJ3', Library), 'MRJPÂ­3', 'royal jelly'))

    sum_assigned_coverage = raw_coverage %>%
        filter(! is.na(Gene), Species == 'Apis mellifera') %>%
        group_by(Library) %>%
        summarize(Count = sum(Count))

    unassigned_coverage = raw_coverage %>%
        filter(is.na(Gene)) %>%
        inner_join(sum_assigned_coverage, by = 'Library') %>%
        mutate(Count = Count.x - Count.y,
               Biotype = 'other') %>%
        select(!!! names(raw_coverage))

    coverage = raw_coverage %>%
        filter(! is.na(Gene)) %>%
        bind_rows(unassigned_coverage)

    species_coverage = coverage %>%
        group_by(Library, Which, Species) %>%
        summarize(Count = sum(Count)) %>%
        mutate(Fraction = Count / sum(Count)) %>%
        ungroup()

    biotype_coverage = coverage %>%
        filter(Species == 'Apis mellifera') %>%
        select(-Species) %>%
        group_by(Library, Which, Biotype) %>%
        summarize(Count = sum(Count)) %>%
        mutate(Fraction = Count / sum(Count)) %>%
        ungroup()

    modules::import('klmr/ggplots', attach = TRUE)
    theme_set(theme_publication())

    wrap_label = function (n) {
        function (x) mutate_all(x, funs(stringr::str_wrap(., n)))
    }

    layout_mini_bars = function (...) {
        list(
             stat_summary(fun.y = mean, geom = 'bar'),
             geom_dotplot(position = position_dodge(width = 0.5), width = 0.5,
                          binaxis = 'y', binwidth = 0.05, stackdir = 'center',
                          dotsize = 0.5, color = 'white'),
             scale_y_continuous(labels = scales::percent),
             scale_color_gray(),
             scale_fill_gray(),
             labs(y = 'RNA fraction', color = NULL, fill = NULL),
             annotate('segment', x = -Inf, xend = Inf,
                      y = -0.05, yend = -0.05, color = 'black', size = 0.5),
             coord_cartesian(ylim = c(-0.01, 1)),
             theme(axis.text.x = element_blank(),
                   axis.title.x = element_blank(),
                   strip.text.x = element_text(vjust = 1))
         )
    }

    # Only plot libraries which contribute at least 1% of the coverage.
    species_coverage %>%
        group_by(Which, Species) %>%
        filter(any(Fraction >= 0.01)) %>%
        ggplot() +
        aes(Which, Fraction, color = Which, fill = Which) +
        facet_grid(. ~ Species, switch = 'x', labeller = wrap_label(15)) +
        layout_mini_bars()

    ggsave('data/plots/species-coverage-boxplot.pdf', width = 5, height = 5)

    biotype_coverage %>%
        filter(Fraction >= 0.01) %>%
        ggplot() +
        aes(Biotype, Count) +
        geom_boxplot(lwd = 1) +
        scale_y_log10() +
        facet_wrap(~ Which) +
        theme(axis.text.x = element_text(angle = 45, hjust = 1),
              strip.text = element_text(size = 12))

    ggsave('data/plots/per-biotype-coverage-boxplot.pdf')
})

# vim: ft=r
