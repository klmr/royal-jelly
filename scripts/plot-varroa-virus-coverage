#!/usr/bin/env/Rscript

sys = modules::import('klmr/sys')

sys$run({
    args = list(
        design = 'raw/samples.csv',
        coverage_path = 'data/coverage/long',
        annotation = '../shared/annotation/Apis_mellifera.GCA_000002195.1-viruses/Apis_mellifera.GCA_000002195.1.32-viruses.gtf',
        outfile = 'data/coverage/long/vdv1-coverage.pdf'
    )
    rtl = modules::import_package('rtracklayer')
    gr = modules::import_package('GenomicRanges')
    io = modules::import('ebi-predocs/ebits/io')

    modules::import_package('dplyr', attach = TRUE)
    tidyr = modules::import_package('tidyr', attach = TRUE)

    all_bw_files = dir(args$coverage_path, pattern = '\\.bw$', full.names = TRUE)

    samples = io$read_table(args$design, header = TRUE) %>%
        filter(Lane == 1) %>%
        select(Sample_ID) %>%
        rename(Library = Sample_ID) %>%
        mutate(Library = gsub('_', '-', Library),
               Which = ifelse(grepl('^MJ3', Library), 'MRJP足3', 'royal jelly'),
               File = vapply(Library, grep, character(1), all_bw_files, value = TRUE)) %>%
        mutate(Library = gsub('-', '足', Library))

    annotation = rtl$import(args$annotation)

    varroa_seqname = gr$seqnames(annotation) %>%
        `[`(grep('Varroa', gr$mcols(annotation)$gene_name)) %>%
        as.character() %>%
        head(1)

    varroa_annotation = annotation[gr$seqnames(annotation) == varroa_seqname][1]

    varroa_coverage = function (coverage) {
        result = coverage[gr$seqnames(coverage) == varroa_seqname]
        GenomeInfoDb::seqlevels(result) = varroa_seqname
        result
    }

    modules::import('coverage_plot', attach = TRUE)

    load_coverage = function (files) {
        lapply(files, function (file) varroa_coverage(rtl$import(file)))
    }

    coverage = samples %>%
        mutate(Coverage = load_coverage(File)) %>%
        mutate(Coverage = lapply(Coverage, coverage_layout)) %>%
        tidyr$unnest()

    tile_range = function (range, tiles)
        seq(range[1], range[2], length.out = tiles + 1)

    nice_ceiling = function (n, accuracy)
        ceiling(n / accuracy) * accuracy

    nice_floor = function (n, accuracy)
        floor(n / accuracy) * accuracy

    modules::import('klmr/ggplots', attach = TRUE)
    theme_set(theme_publication())

    y_extrema = function (range)
        nice_floor(range[2], 1000)

    type_colors = c(`MRJP足3` = '#7ba700', `royal jelly` = '#007ba7')

    ggplot(coverage) +
        aes(Position, Coverage, fill = Which) +
        geom_area() +
        scale_x_genomic(multiplier = 1e3) +
        scale_y_continuous(labels = scales::comma, breaks = y_extrema) +
        scale_fill_manual(NULL, values = type_colors, guide = FALSE) +
        facet_grid(Library ~ ., scales = 'free_y') +
        xlab('VDV足1 genome position') +
        theme(axis.ticks.x = element_line())

    ggsave(args$outfile, width = 6, height = 4)
})

# vim: ft=r
