#!/usr/bin/env/Rscript

sys = modules::import('klmr/sys')

zip = function (...)
    as.vector(do.call(rbind, list(...)))

zip_with = function (fun, ...)
    do.call(mapply, c(list(fun), list(...)))

#' Convert an Rle object to a ribbon surface
#'
#' @param rle the Rle object
rle_to_surface = function (rle) {
    modules::import_package('S4Vectors', attach = TRUE)
    tibble(pos = zip(start(rle), end(rle)),
           score = rep(runValue(rle), each = 2))
}

geom_coverage = function (mapping = NULL, data = NULL) {
    surface = lapply(gr$coverage(data, weight = 'score'), rle_to_surface) %>%
        Map(function (name, x) mutate(x, seqname = name), names(.), .) %>%
        bind_rows()

    geom_ribbon(aes(x = pos, ymax = score), data = surface, ymin = 0)
}

sys$run({
    args = list(
        plus = 'data/coverage/short/MJ3-13-19_S6_merged_001.bw',
        minus = 'data/coverage/short/MJ3-13-19_S5_merged_001-minus.bw',
        annotation = '../shared/annotation/Apis_mellifera.GCA_000002195.1-viruses/Apis_mellifera.GCA_000002195.1.32-viruses.gtf'
    )
    rtl = modules::import_package('rtracklayer')
    gr = modules::import_package('GenomicRanges')

    modules::import_package('dplyr', attach = TRUE)

    annotation = rtl$import(args$annotation)

    varroa_seqname = gr$seqnames(annotation) %>%
        `[`(grep('Varroa', gr$mcols(annotation)$gene_name)) %>%
        as.character() %>%
        head(1)

    varroa_annotation = annotation[gr$seqnames(annotation) == varroa_seqname][1]

    varroa_coverage = function (coverage) {
        result = coverage[gr$seqnames(coverage) == varroa_seqname]
        GenomeInfoDb::seqlevels(result) = varroa_seqname
        result
    }

    coverage_plus = varroa_coverage(rtl$import(args$plus))
    coverage_minus = varroa_coverage(rtl$import(args$minus))

    tile_range = function (range, tiles)
        seq(range[1], range[2], length.out = tiles + 1)

    nice_ceiling = function (n, accuracy)
        ceiling(n / accuracy) * accuracy

    modules::import('klmr/ggplots', attach = TRUE)
    theme_set(theme_publication())

    ggplot(data) +
        aes(V2, ymin = 0, ymax = V3) +
        geom_ribbon() +
        labs(x = 'Position (bp)', y = 'Coverage') +
        scale_x_continuous(breaks = round(tile_range(range(data$V2), 10)),
                           limits = c(1, nice_ceiling(max(data$V2), 100)),
                           expand = c(0, 0))
})

# vim: ft=r
